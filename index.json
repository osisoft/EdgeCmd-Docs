{
    "content/administration/administration.html":  {
                                                       "href":  "content/administration/administration.html",
                                                       "title":  "Administration",
                                                       "keywords":  "Administration Use EdgeCmd utility to perform administrative level functions for AVEVA adapters and EDS, such as starting and stopping an adapter ingress component, removing an adapter component, or resetting the entire application."
                                                   },
    "content/administration/delete-configuration.html":  {
                                                             "href":  "content/administration/delete-configuration.html",
                                                             "title":  "Delete configuration",
                                                             "keywords":  "Delete configuration Use EdgeCmd utility to delete adapter or EDS configurations or configuration entries that you no longer need. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter or EDS, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Delete configuration entry Complete the following steps to delete a configuration entry from a collection configuration. For example, you can delete a single health endpoint of the HealthEndpoints facet within the System component. Access EdgeCmd utility through the command line. Type the remove keyword. Add the \u003cfacetName\u003e and \u003ccomponentId\u003e , replacing both with their respective values. Add the ID of the entry to be removed. Then press Enter. edgecmd remove \u003cfacetName\u003e -cid \u003ccomponentId\u003e -id \u003centry\u003e Example: Delete endpoint_1 of the HealthEndpoints facet in the System component: edgecmd remove HealthEndpoints -cid System -id endpoint_1 Note: If the facet is part of the System component, the command does not require \u003ccomponentId\u003e , for example: edgecmd remove HealthEndpoints -id OcsEndpoint Delete entire configuration Complete the following steps to delete the entire configuration of a system facet. For example, you can delete the configuration of the HealthEndpoints facet within the System component. Access EdgeCmd utility through the command line. Type the remove keyword. Add the \u003cfacetName\u003e and \u003ccomponentId\u003e , replacing both with their respective values. Then press Enter. edgecmd remove \u003cfacetName\u003e -cid \u003ccomponentId\u003e Example: Delete the HealthEndpoints facet configuration file from the System component: edgecmd remove HealthEndpoints -cid System Note: To skip the confirmation prompt, specify the -y parameter in the command."
                                                         },
    "content/administration/reset-application.html":  {
                                                          "href":  "content/administration/reset-application.html",
                                                          "title":  "Reset application",
                                                          "keywords":  "Reset application Use EdgeCmd utility to reset the entire application and the storage in EDS. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter or EDS, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Access EdgeCmd utility through the command line. Run the following command: edgecmd reset application Answer the prompt to confirm the reset. Note: You can specify the -y parameter in the command to skip the confirmation prompt."
                                                      },
    "content/administration/start-or-stop-a-component.html":  {
                                                                  "href":  "content/administration/start-or-stop-a-component.html",
                                                                  "title":  "Start or stop a component",
                                                                  "keywords":  "Start or stop a component Complete the following steps to either start or stop an adapter or EDS component. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter or EDS, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Access EdgeCmd utility through the command line. Type one of the following in the command line, replacing \u003ccomponentId\u003e with the ID of the component, and press Enter. edgecmd stop -cid \u003cComponentId\u003e Example - Stop the OpcUa1 component edgecmd stop -cid OpcUa1 edgecmd start -cid \u003cComponentId\u003e Example - Start the OpcUa1 component edgecmd start -cid OpcUa1"
                                                              },
    "content/configuration/configuration.html":  {
                                                     "href":  "content/configuration/configuration.html",
                                                     "title":  "Configuration",
                                                     "keywords":  "Configuration Use EdgeCmd utility to configure an adapter or adapter components directly from the command line or by pointing to a JSON file that contains the configuration. For more information about the specific configurations, see the respective adapter documentation."
                                                 },
    "content/configuration/configure-adapter-data-selection-with-csv-files.html":  {
                                                                                       "href":  "content/configuration/configure-adapter-data-selection-with-csv-files.html",
                                                                                       "title":  "Configure adapter data selection with .csv files",
                                                                                       "keywords":  "Configure adapter data selection with .csv files Use EdgeCmd utility to import data selection from, and export it into, a .csv (comma-separated value) file. EdgeCmd utility recognizes the content in .csv format from the specified file path and converts it. Note: The .csv file needs to include a header row. Import data selection from a .csv file Complete the following steps to import data selection from a .csv file Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003ccomponentId\u003e with the ID of the component and \u003cPathToCsvFile\u003e with the path to the .csv file from which you want to import the data selection. Then press Enter. edgecmd set DataSelection -cid \u003ccomponentId\u003e -file \u003cPathToCsvFile\u003e -csv Export data selection into a .csv file Complete the following steps to export data selection into a .csv file Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003ccomponentId\u003e with the ID of the component for which you want to export the data selection. Then press Enter. edgecmd get DataSelection -cid \u003ccomponentId\u003e [-file \u003cPathToCsvFile\u003e] -csv If you omit the optional parameter and its argument -file PathToCsvFile , the contents are written to the standard output terminal or console. Sample output edgecmd get DataSelection -cid OpcUa1 -csv selected,name,nodeId,streamId,dataFilterId True,Counter,ns=3;s=Counter,3.Counter, True,ByteAnalogItem,ns=6;s=ByteAnalogItem,6.ByteAnalogItem, True,DoubleAnalogItem,ns=6;s=DoubleAnalogItem,6.DoubleAnalogItem, True,FloatAnalogItem,ns=6;s=FloatAnalogItem,6.FloatAnalogItem, True,Int16AnalogItem,ns=6;s=Int16AnalogItem,6.Int16AnalogItem, True,Int32AnalogItem,ns=6;s=Int32AnalogItem,6.Int32AnalogItem, True,Int64AnalogItem,ns=6;s=Int64AnalogItem,6.Int64AnalogItem, True,SByteAnalogItem,ns=6;s=SByteAnalogItem,6.SByteAnalogItem, True,UInt16AnalogItem,ns=6;s=UInt16AnalogItem,6.UInt16AnalogItem, True,UInt32AnalogItem,ns=6;s=UInt32AnalogItem,6.UInt32AnalogItem, True,UInt64AnalogItem,ns=6;s=UInt64AnalogItem,6.UInt64AnalogItem, True,BooleanDataItem,ns=6;s=BooleanDataItem,6.BooleanDataItem, True,ByteDataItem,ns=6;s=ByteDataItem,6.ByteDataItem, True,DateTimeDataItem,ns=6;s=DateTimeDataItem,6.DateTimeDataItem, True,DoubleDataItem,ns=6;s=DoubleDataItem,6.DoubleDataItem, True,FloatDataItem,ns=6;s=FloatDataItem,6.FloatDataItem, True,Int16DataItem,ns=6;s=Int16DataItem,6.Int16DataItem, True,Int32DataItem,ns=6;s=Int32DataItem,6.Int32DataItem, True,Int64DataItem,ns=6;s=Int64DataItem,6.Int64DataItem, True,SByteDataItem,ns=6;s=SByteDataItem,6.SByteDataItem, True,StringDataItem,ns=6;s=StringDataItem,6.StringDataItem, True,UInt16DataItem,ns=6;s=UInt16DataItem,6.UInt16DataItem, True,UInt32DataItem,ns=6;s=UInt32DataItem,6.UInt32DataItem, True,UInt64DataItem,ns=6;s=UInt64DataItem,6.UInt64DataItem, Note: EdgeCmd utility translates null values into an empty string for the get operation, while it interprets empty strings as null values for the set operation. To specify an empty string for the configuration, use double quotes \"\" ."
                                                                                   },
    "content/configuration/configure-adapter-or-eds-component.html":  {
                                                                          "href":  "content/configuration/configure-adapter-or-eds-component.html",
                                                                          "title":  "Configure adapter or EDS component",
                                                                          "keywords":  "Configure adapter or EDS component Use EdgeCmd utility to add and remove adapter or EDS components, and to configure facets of the components. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter or EDS, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Note: If a command contains slashes, you must add escape characters as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three additional slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Add components Complete the following steps to add a new component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003ccomponentType\u003e and \u003ccomponentId\u003e with the values for the component and press Enter. Note: The only valid component type is the adapter or EDS type. For example, if you are trying to register a new Modbus component, use Modbus and if you are trying to register an OPC UA component, use OpcUa . Refer to the specific adapter or EDS user guide for the component type. edgecmd add Components [-type \u003ccomponentType\u003e] [-id \u003ccomponentId\u003e] Example : Modbus adapter component registration edgecmd add Components -type Modbus -id Modbus1 Configure a facet of a component All adapters and EDS have different configurable facets. Complete the following steps to configure a facet: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003cfacetName\u003e and \u003ccomponentId\u003e with their respective values. Then press Enter. edgecmd set \u003cfacetName\u003e -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Example : Configuration of the data source facet of a Modbus adapter edgecmd set DataSource -cid Modbus1 -file C:\\Users\\TestUser\\Modbus1\\DataSource.json Note: For more information on adapter or EDS specific facets, see the respective adapter or EDS documentation. Remove a component Complete the following steps to remove a component from the adapter or EDS: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003ccomponentId\u003e with the ID of the component to remove, and press Enter. Edgecmd prompts with \"Please Confirm [y/N]: [y N]: \" unless you include the optional -y parameter. edgecmd remove Components [-id \u003ccomponentId] [-y] Example : Removal of the Modbus component edgecmd remove Components -id Modbus1 Note: You cannot remove the OmfEgress from PI adapters or the Storage component from EDS. They are required for the products to operate."
                                                                      },
    "content/configuration/configure-an-adapter-or-eds-with-commands.html":  {
                                                                                 "href":  "content/configuration/configure-an-adapter-or-eds-with-commands.html",
                                                                                 "title":  "Configure an adapter or EDS with commands",
                                                                                 "keywords":  "Configure an adapter or EDS with commands Use EdgeCmd utility to configure an adapter or EDS using only commands or by pointing to JSON files. For more information, see Configure an adapter or EDS with JSON files . Note: The examples in this topic use the default port number 5590 . If you specified a different port number for your adapter or EDS, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Note: If a command contains slashes, you must add escape characters as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three additional slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Change all values of a facet Complete the following steps to change all values of a facet: Access EdgeCmd utility through the command line. Type the set keyword. Add the \u003cfacetName\u003e and \u003ccomponentId\u003e , replacing both with their respective values. Add all key-value pairs. Then, press Enter. edgecmd set \u003cfacetName\u003e -cid \u003ccomponentId\u003e -\u003cKey1\u003e \u003cValue1\u003e -\u003cKey2\u003e \u003cValue2\u003e -\u003cKey3\u003e \u003cValue3\u003e Example: Change all values in the Logging facet of the OpcUa1 component: edgecmd set Logging -cid OpcUa1 -LogLevel Warning -LogFileSizeLimitBytes 5000 -LogFileCountLimit 30 Linux only: Add or change data selection items containing single quotes For the following TextParser-based adapters, you must wrap the value of data selection items that contain single quotes within single quotes and escape those with a backslash: PI Adapter for Structured Data Files PI Adapter for MQTT PI Adapter for Azure Event Hubs Instead of $[\u0027Value1\u0027] , type \u0027$[\u0027\\\u0027\u0027Value1\u0027\\\u0027\u0027]\u0027 . Example: edgecmd add dataselection -cid MQTT1 -timefield \u0027$[\u0027\\\u0027\u0027Timestamp\u0027\\\u0027\u0027]\u0027 -valuefield \u0027$[\u0027\\\u0027\u0027Value\u0027\\\u0027\u0027]\u0027` Configure key-value pairs in a facet Complete the following steps to configure not all but any number of valid key-value pairs in a facet: Access EdgeCmd utility through the command line. Type the edit keyword and the \u003cfacetName\u003e . Add the \u003cfacetName\u003e and \u003ccomponentId\u003e , replacing both with their respective values. Add the key-value pairs you want to configure. Then, press Enter. edgecmd edit \u003cfacetName\u003e -cid \u003ccomponentId\u003e -\u003cKey1\u003e \u003cValue1\u003e Example: Configure the LogFileCountLimit key in the Logging facet of the Modbus1 component: edgecmd edit Logging -cid Modbus1 -LogFileCountLimit 15 Add an entry to a collection configuration An entry in a collection configuration is, for example, a complete facet of a configured component. Complete the following steps to add an entry to a collection configuration: Access EdgeCmd utility through the command line. Type the add keyword and the \u003cfacetName\u003e . Add the \u003ccomponentId\u003e , replacing it with the ID of the component. Add the key-value pairs. Then, press Enter. edgecmd add \u003cfacetName\u003e -cid \u003ccomponentId\u003e -\u003cKey1\u003e \u003cValue1\u003e -\u003cKey2\u003e \u003cValue2\u003e Example: Add the \u0027Schedules\u0027 facet to the \u0027Modbus1\u0027 component: edgecmd add Schedules -cid Modbus1 -Id 2 -Period 00:00:30 Configure payload port EdgeCmd utility commands may include up to two port numbers. The first specified port number is always designated for the EdgeCmd application. The second port number is designated for the payload of the adapter or EDS. Complete the following steps to edit the port number of the payload: Access EdgeCmd utility through the command line. Type the edit and datasource keywords. Add the first \u003cport\u003e , replacing it with the port number of the EdgeCmd application. The default is 5590 . Add the \u003ccomponentId\u003e , replacing it with the ID of the component. Add the second \u003cport\u003e , replacing it with the port number of the payload. Then, press Enter. edgecmd edit datasource -port 5590 -cid Mqtt1 -port 1885 Note: If a payload port number is configured for a component and you specify only one port number in the data source command, you will receive the following error message: Invalid arguments. Input arguments are required. If you specify more than two port numbers, you will receive the following error message: Duplicate optional argument: -port"
                                                                             },
    "content/configuration/configure-an-adapter-or-eds-with-json-files.html":  {
                                                                                   "href":  "content/configuration/configure-an-adapter-or-eds-with-json-files.html",
                                                                                   "title":  "Configure an adapter or EDS with .json Files",
                                                                                   "keywords":  "Configure an adapter or EDS with .json Files Use EdgeCmd utility to import a .json file that contains the adapter or EDS configuration into the adapter or EDS. A file import completely replaces the existing configurations; therefore, you cannot use it to change individual values in a facet without modifying others. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter or EDS, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e \u003c!-- MB 9/16: 9 16: This section needs a note that says each adapter doc set contains more information on valid key/value key value pairs for each configuration file. --\u003e Import bulk configuration Complete the following steps to import a bulk configuration: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003cPathToJsonFile\u003e with the path to the .json file that contains the application configuration. Then press Enter. edgecmd set application -file \u003cPathToJsonFile\u003e Example: edgecmd set application -file C:\\Users\\TestUser\\Adapter\\BulkConfiguration.json Import component configuration Complete the following steps to import a configuration file for a component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003ccomponentId\u003e with the ID of the component and \u003cPathToJsonFile\u003e with the path to the .json file that contains the component configuration. Then press Enter. edgecmd set -cid \u003ccomponentId\u003e -file \u003cPathToJsonFile\u003e Example: edgecmd set -cid OpcUa1 -file C:\\Users\\TestUser\\Adapter\\ComponentConfiguration.json Import facet-specific configuration Complete the following steps to import a facet-specific configuration file for a component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003cfacetName\u003e with the name of the facet, \u003ccomponentId\u003e with the ID of the component, and \u003cPathToJsonFile\u003e with the path to the .json file that contains the component facet configuration. Then press Enter. edgecmd set \u003cfacetName\u003e -cid \u003ccomponentId\u003e -file \u003cPathToJsonFile\u003e Example: edgecmd set Logging -cid OpcUa1 -file C:\\Users\\TestUser\\Adapter\\FacetConfiguration.json"
                                                                               },
    "content/edgecmd-utility.html":  {
                                         "href":  "content/edgecmd-utility.html",
                                         "title":  "EdgeCmd utility",
                                         "keywords":  "EdgeCmd utility Use OSIsoft\u0027s proprietary tool, EdgeCmd utility, to configure and administer AVEVA adapters and Edge Data Store (EDS) on Linux and Windows using command line arguments. Because EdgeCmd utility is a command line tool, you can make adjustments to the configuration on the fly without programming. If you prefer, you can perform all tasks available in EdgeCmd utility using REST APIs. Use EdgeCmd utility to make one-off changes; use REST APIs to configure multiple systems the same way programmatically. Note: Configuration and administrative REST interfaces are generally exposed through the command line."
                                     },
    "content/index.html":  {
                               "href":  "content/index.html",
                               "title":  "EdgeCmd utility",
                               "keywords":  "EdgeCmd utility Use OSIsoft\u0027s proprietary tool, EdgeCmd utility, to configure and administer AVEVA adapters and Edge Data Store (EDS) on Linux and Windows using command line arguments. Because EdgeCmd utility is a command line tool, you can make adjustments to the configuration on the fly without programming. If you prefer, you can perform all tasks available in EdgeCmd utility using REST APIs. Use EdgeCmd utility to make one-off changes; use REST APIs to configure multiple systems the same way programmatically. Note: Configuration and administrative REST interfaces are generally exposed through the command line. \u003c!-- # EdgeCmd utility ======= - [EdgeCmd utility](xref:EdgecmdUtility) - [Configuration](xref:Configuration) - [Configure adapter](xref:ConfigureAdapter) - [Configure adapter component](xref:ConfigureAdapterComponent) - [Administration](xref:Administration) - [Delete configuration](xref:DeleteConfiguration) - [Start or stop a component](xref:StartOrStopAComponent) - [Reference](xref:Reference) - [Retrieve EdgeCmd utility help](xref:RetrieveEdgeCmdUtilityHelp) - [Retrieve existing configuration](xref:RetrieveExistingConfiguration) - [EdgeCmd commands](xref:EdgeCmdCommands) --\u003e"
                           },
    "content/installation/access-edgecmd-utility.html":  {
                                                             "href":  "content/installation/access-edgecmd-utility.html",
                                                             "title":  "Access EdgeCmd utility",
                                                             "keywords":  "Access EdgeCmd utility Access EdgeCmd utility using a command prompt or terminal window. Access EdgeCmd utility on Windows Complete the following steps to access EdgeCmd utility on Windows: Open a command prompt. Type edgecmd followed by the command of your choice and press Enter. For example edgecmd help -cid system . Note: EdgeCmd is added to PATH, so you can execute it from any folder. Access EdgeCmd utility on Linux Complete the following steps to access EdgeCmd utility on Linux: Open a terminal window. Type edgecmd followed by the command of your choice and press Enter. For example edgecmd help -cid system . Note: You do not need to specify the full path /opt/OSIsoft/EdgeCmd/  opt OSIsoft EdgeCmd  when you use EdgeCmd utility on Linux."
                                                         },
    "content/installation/installation.html":  {
                                                   "href":  "content/installation/installation.html",
                                                   "title":  "Installation",
                                                   "keywords":  "Installation Install EdgeCmd utility on a local machine using an install kit that you can download from the AVEVA Customer Portal. For instructions on downloading and installing EdgeCmd utility, see Install EdgeCmd utility ."
                                               },
    "content/installation/install-edgecmd-utility.html":  {
                                                              "href":  "content/installation/install-edgecmd-utility.html",
                                                              "title":  "Install EdgeCmd utility",
                                                              "keywords":  "Install EdgeCmd utility You can install EdgeCmd utility on either a Windows or Linux operating system. For more information, see System requirements . Note: EdgeCmd utility does not have a user interface or installation prompt. Windows Prerequisite: Contact your IT department to ensure that you have administrative privileges necessary on the local machine to run the install kit. Complete the following steps to install EdgeCmd utility on Windows: Download the EdgeCmd_1.3.0.27-x64_.msi file from the OSIsoft Customer portal (https://customers.osisoft.com/s/products) (https:  customers.osisoft.com s products) . Note : Customer login credentials are required to access the portal. Run the .msi file. Note: To change the install path from the default path of C:\\Program Files\\OSIsoft\\EdgeCmd , enter the following command in the command prompt and update the \u003cfile_path\u003e . OSIsoft recommends you use the default value. msiexec /i  i EdgeCmd.msi INSTALLFOLDER=\u003cfile_path\u003e Note: You must type INSTALLFOLDER in all caps. EdgeCmd utility is installed on your device. Linux Note: You must have administrative privileges to install the software, for example, root or sudo privilege. Complete the following steps to install EdgeCmd utility on Linux: Open a terminal window and type the sudo command for the appropriate EdgeCmd .deb file for your processor: For Intel/AMD Intel AMD 64-bit processors sudo apt install ./EdgeCmd_1.3.0.27-x64_.deb . EdgeCmd_1.3.0.27-x64_.deb For ARM32, Raspberry PI 2,3,4: Raspbian, BeagleBone sudo apt install ./EdgeCmd_1.3.0.27-arm_.deb . EdgeCmd_1.3.0.27-arm_.deb For Raspberry PI 3,4: Ubuntu ARM64 Server, Google Coral Dev Board, Nvidia Nano Jetson sudo apt install ./EdgeCmd_1.3.0.27-arm64_.deb . EdgeCmd_1.3.0.27-arm64_.deb A validation check for prerequisites is completed. Note: The default installation location is /opt/OSIsoft/EdgeCmd  opt OSIsoft EdgeCmd . After the check for prerequisites succeeds, accept the default port number 5590 or change the port number. If the Linux OS is up-to-date, the install succeeds and EdgeCmd utility starts running on your device. If the install fails, run the following commands from the terminal window and try the install again: sudo apt update sudo apt upgrade"
                                                          },
    "content/installation/system-requirements.html":  {
                                                          "href":  "content/installation/system-requirements.html",
                                                          "title":  "System requirements",
                                                          "keywords":  "System requirements EdgeCmd is supported on a variety of platforms and processors. Install kits are available for the following platforms: Operating System Platform Installation Kit Processor(s) Windows 10 Enterprise Windows 10 IoT Enterprise x64 EdgeCmd_1.3.0.27-x64_.msi Intel/AMD Intel AMD 64-bit processors Debian 9, 10Ubuntu 18.04, 20.04 x64 EdgeCmd_1.3.0.27-x64_.deb Intel/AMD Intel AMD 64-bit processors Debian 9, 10Ubuntu 20.04 ARM32 EdgeCmd_1.3.0.27-arm_.deb Arm 32-bit processors Debian 10Ubuntu 20.04 ARM64 EdgeCmd_1.3.0.27-arm64_.deb Arm 64-bit processors"
                                                      },
    "content/installation/uninstall-edgecmd-utility.html":  {
                                                                "href":  "content/installation/uninstall-edgecmd-utility.html",
                                                                "title":  "Uninstall EdgeCmd utility",
                                                                "keywords":  "Uninstall EdgeCmd utility Complete the procedure corresponding to your specific operating system to uninstall EdgeCmd utility: Windows From the Windows Control Pane, open Add or remove programs . In the Apps \u0026 Features list, click AVEVA EdgeCmd Utility \u003e Uninstall \u003e Uninstall . Linux Open a terminal window. Run the following command: sudo apt remove aveva.edgecmd"
                                                            },
    "content/management/management.html":  {
                                               "href":  "content/management/management.html",
                                               "title":  "Management",
                                               "keywords":  "Management Use EdgeCmd utility to perform management level functions for AVEVA adapters and EDS, such as creating secrets, deleting secrets, and updating secrets. You can also perform management level functions using any programming language or tool that supports making REST calls. For more information, see the respective adapter documentation."
                                           },
    "content/management/secrets.html":  {
                                            "href":  "content/management/secrets.html",
                                            "title":  "Configure secrets",
                                            "keywords":  "Configure secrets Use EdgeCmd utilty to manage secrets. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter or EDS, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Updating secrets configuration Complete the following steps to create or update the entire secret configuration. Access EdgeCmd utility through the command line. Type the set keyword. Add the Secrets facet. Add the key-value pairs if needed. Then, press Enter. Example 1: Update using a file. Note: If the secret configuration already exists, using this command will replace the entire old secret configuration. edgecmd set Secrets -file \u003cfilePath\u003e Example 2: Update using key-value pairs. Note: If the secret configuration already exists, this command will append the secret to the current secret configuration. If the secret configuration does not exist, it will create the configuration with this single secret. If a secret with this secretId already exists, it will update the values. edgecmd set Secrets -id \u003csecretId\u003e -value \u003csecretValue\u003e -description \u003cdescription\u003e -expirationDate \u003cexpirationDate\u003e Deleting secrets Complete the following steps to permanently delete secrets. Access EdgeCmd utility through the command line. Type the remove keyword. Add the Secrets facet. Add the key-value pairs if needed. Then, press enter. Example 1: Deleting a single secret. edgecmd remove Secrets -id \u003csecretId\u003e Example 2: Deleting the entire set of secrets in the secret configuration. edgecmd remove Secrets Note: You can specify -y parameter to skip the confirmation prompt. Other Secret Commands Returning a single secret. edgecmd get Secrets -id \u003csecretId\u003e Returning the entire secrets configuration. edgecmd get Secrets Returning secrets help information. edgecmd help Secrets"
                                        },
    "content/reference/edgecmd-commands.html":  {
                                                    "href":  "content/reference/edgecmd-commands.html",
                                                    "title":  "EdgeCmd commands",
                                                    "keywords":  "EdgeCmd commands The tables in the following sections provide a description of every command available in EdgeCmd utility. The following rules apply: Every command has to be preceded by edgecmd . All parts of a command that are wrapped in [ ] are optional and do not need to be specified. The -y keyword in a command confirms overwriting of an existing file. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port 5591 Configuration \u003cRestOfTheCommand\u003e Note: If a command contains slashes, you must add escape characters as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Help output The following commands display help output for different levels of the application. EdgeCmd command Description Examples edgecmd help Display help output for the EdgeCmd application. edgecmd help [\u003ctarget\u003e] Display configuration help output for System level targets, for example application , healthendpoints , and logging . edgecmd help General edgecmd help \u003ctarget\u003e -cid \u003ccomponentId\u003e Display configuration help output for any registered component and facet. edgecmd help DataSource -cid opcua1 edgecmd help -cid \u003ccomponentId\u003e Display configuration help output for any registered component. edgecmd help -cid OpcUa1 Port configuration EdgeCmd command Description Example edgecmd -port 5590 \u003ccommand\u003e [-cid \u003ccomponentId\u003e] Specify the port number for communication with EDS or the adapter. The default is 5590 . edgecmd -port 5595 get Components edgecmd -port 5590 \u003ccommand\u003e [-cid \u003ccomponentId\u003e] -port \u003cport\u003e Specify the port number for the adapter or EDS payload. For more information on how to configure a payload port number, see Configure an adapter or EDS with commands . edgecmd -port 5590 edit datasource -cid Mqtt1 -port 1885 Application configuration The following commands configure the application. EdgeCmd command Description Example edgecmd get Application [-file \u003cfilepath\u003e] Get the configuration for every platform component. edgecmd get Application edgecmd set Application -file \u003cfilepath\u003e Import the entire configuration for a AVEVA adapter or EDS. edgecmd set Application -file C:\\Users\\TestUser\\Adapter\\Configuration.json edgecmd reset Application Reset the entire application and storage in EDS. edgecmd help Application Display help output for the application target. System component configuration The following commands configure specific facets of the system component. Components facet configuration EdgeCmd command Description Example edgecmd get Components [-file \u003cfilepath\u003e] Get the component configuration. edgecmd get Components edgecmd set Components [-file \u003cfilepath\u003e] Import the components configuration. edgecmd set Components -file C:\\Users\\TestUser\\Components\\Configuration.json edgecmd add Components [-type \u003ctype\u003e] [-id \u003ccomponentId\u003e] Add a component to the components configuration. edgecmd add Components -type Modbus -id Modbus1 edgecmd remove Components [-id \u003ccomponentId] [-y] Remove the specified component from the configuration. edgecmd remove Components -id Modbus1 edgecmd help Components Display help output for the components configuration. Buffering facet configuration EdgeCmd command Description Examples edgecmd get Buffering [-file \u003cfilepath\u003e] Get the buffering configuration. edgecmd get Buffering -file C:\\Users\\TestUser\\Buffering\\Configuration.json edgecmd set Buffering [-file \u003cfilepath\u003e] Import the buffering configuration. edgecmd set Buffering edgecmd edit Buffering [-bufferLocation \u003cvalue\u003e] [-maxBufferSizeMB \u003cvalue\u003e] [-enableBuffering \u003cvalue\u003e] Change the buffering configuration. edgecmd Buffering -bufferLocation C:/ProgramData/OSIsoft/Adapters/Modbus/Buffers C: ProgramData OSIsoft Adapters Modbus Buffers -maxBufferSizeMB 1024 -enableBuffering true edgecmd help Buffering Display help output for the buffering configuration. Health endpoints facet configuration EdgeCmd command Description Examples edgecmd get HealthEndpoints [-file \u003cfilepath\u003e] Get the health endpoints configuration. edgecmd get HealthEndpoints edgecmd set HealthEndpoints [-file \u003cfilepath\u003e] Import the health endpoints configuration. edgecmd set HealthEndpoints -file C:\\Users\\TestUser\\HealthEndpoints\\Configuration.json edgecmd add HealthEndpoints [-id \u003cstring\u003e] [-Endpoint \u003cendpointUrl\u003e] [-UserName \u003cuserName\u003e] [-Password \u003cpassword\u003e] [-ClientId \u003cclientId\u003e] [-ClientSecret \u003cclientSecret\u003e] [-TokenEndpoint \u003ctokenEndpoint\u003e] [-ValidateEndpointCertificate \u003ctrue/false\u003e] \u003ctrue false\u003e] Add a health endpoint. edgecmd add HealthEndpoints -id ADH -Endpoint https://ADH_OMF_endpoint https:  ADH_OMF_endpoint -ClientId TestUser -ClientSecret TestPassword edgecmd edit HealthEndpoints [-id \u003cstring\u003e] [-Endpoint \u003cendpointUrl\u003e] [-UserName \u003cuserName\u003e] [-Password \u003cpassword\u003e] [-ClientId \u003cclientId\u003e] [-ClientSecret \u003cclientSecret\u003e] [-TokenEndpoint \u003ctokenEndpoint\u003e] [-ValidateEndpointCertificate \u003ctrue/false\u003e] \u003ctrue false\u003e] Change a health endpoint. edgecmd edit HealthEndpoints -id ADH -Endpoint https://ADH_OMF_endpoint https:  ADH_OMF_endpoint -ClientId TestUser -ClientSecret TestPassword edgecmd remove HealthEndpoints [-id \u003cstring\u003e] [-y] Remove a health endpoint. edgecmd remove HealthEndpoints -id ADH edgecmd help HealthEndpoints Display help output for the health endpoints configuration. OMF egress data endpoints facet configuration EdgeCmd command Description Examples edgecmd get DataEndpoints [-file \u003cfilepath\u003e] Get the data endpoints configuration. edgecmd get DataEndpoints edgecmd set DataEndpoints [-file \u003cfilepath\u003e] Import the data endpoints configuration. edgecmd set DataEndpoints -file C:\\Users\\TestUser\\DataEndpoints\\Configuration.json edgecmd add DataEndpoints [-id \u003cendpointId\u003e] [-Endpoint \u003cendpointUrl\u003e] [-UserName \u003cuserName\u003e] [-Password \u003cpassword\u003e] [-ClientId \u003cclientId\u003e] [-ClientSecret \u003cclientSecret\u003e] [-TokenEndpoint \u003ctokenEndpoint\u003e] [-ValidateEndpointCertificate \u003ctrue/false\u003e] \u003ctrue false\u003e] Add data endpoints. edgecmd add DataEndpoints -id PI Web Api -Endpoint https://pi_web_api_server/piwebapi/omf/ https:  pi_web_api_server piwebapi omf  -UserName TestUser -Password TestPassword -ValidateEndpointCertificate false edgecmd edit DataEndpoints -id \u003cstring\u003e [-Endpoint \u003cendpointUrl\u003e] [-UserName \u003cuserName\u003e] [-Password \u003cpassword\u003e] [-ClientId \u003cclientId\u003e] [-ClientSecret \u003cclientSecret\u003e] [-TokenEndpoint \u003ctokenEndpoint\u003e] [-ValidateEndpointCertificate \u003ctrue/false\u003e] \u003ctrue false\u003e] Change a data endpoint. edgecmd edit DataEndpoints -id PI Web Api -Endpoint https://pi_web_api_server/piwebapi/omf/ https:  pi_web_api_server piwebapi omf  -UserName TestUser -Password TestPassword -ValidateEndpointCertificate true edgecmd remove DataEndpoints -id \u003cstring\u003e [-y] Remove the specified data endpoint. edgecmd remove DataEndpoints -id PI Web API edgecmd remove DataEndpoints [-y] Remove all data endpoints. edgecmd remove DataEndpoints -y edgecmd help DataEndpoints Display help output for the data endpoints configuration. Component configuration The following commands configure a component. EdgeCmd command Description Examples edgecmd get -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Get the configuration of the specified component. edgecmd get -cid OpcUa1 edgecmd set -cid \u003ccomponentId\u003e -file \u003cfilepath\u003e Import the configuration for a component. edgecmd set -cid Modbus1 -file C:\\Users\\TestUser\\Components\\Configuration.json edgecmd remove -cid \u003ccomponentId\u003e [-y] Remove the specified component. edgecmd remove -cid OpcUa1 -y edgecmd start -cid \u003ccomponentId\u003e Start the specified component. edgecmd start -cid Modbus1 edgecmd stop -cid \u003ccomponentId\u003e Stop the specified component. edgecmd stop -cid OpcUa1 edgecmd help -cid \u003ccomponentId\u003e Display help output for the specified component. edgecmd help -cid Modbus1 Component facets configuration The following commands configure specific facets of a component. Logging facet configuration EdgeCmd command Description Examples edgecmd get Logging [-cid \u003ccomponentId\u003e] [-file \u003cfilepath\u003e] Get the logging configuration for specified component. edgecmd get Logging -cid Modbus1 edgecmd set Logging [-cid \u003ccomponentId\u003e] [-file \u003cfilepath\u003e] Import the logging configuration of the specified component. edgecmd set Logging -cid OpcUa1 edgecmd edit Logging [-cid \u003ccomponentId\u003e] [-LogLevel \u003clogLevel\u003e] [-LogFileSizeLimitBytes \u003cMaxSize\u003e] [-LogFileCountLimit \u003cFileCount\u003e] Change the logging configuration for the specified component. edgecmd edit Logging -cid Modbus1 -LogLevel Information -LogFileSizeLimitBytes 4567 -LogFileCountLimit 123 edgecmd help Logging Display help output for the logging facet. Schedules facet configuration EdgeCmd command Description Examples edgecmd get Schedules -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Get the schedules configuration for the specified component. edgecmd get Schedules -cid Modbus1 edgecmd set Schedules -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Import the schedules configuration for the specified component. edgecmd set Schedules -cid OpcUa1 -file C:\\Users\\TestUsers\\Schedules\\Configuration.json edgecmd add Schedules -cid \u003ccomponentId\u003e -id \u003citemid\u003e [-Period \u003cperiod\u003e] [-Offset \u003coffset\u003e] Add the schedules configuration for the specified component. edgecmd add Schedules -cid Modbus1 -id Schedule1 -Period 125 -Offset 25 edgecmd edit Schedule -cid \u003ccomponentId\u003e -id \u003citemid\u003e [-Period \u003cperiod\u003e] [-Offset \u003coffset\u003e] Change the schedules configuration for the specified component. edgecmd edit Schedule -cid OpcUa1 -id Schedule2 edgecmd remove Schedule -cid \u003ccomponentId\u003e [-id \u003citemid\u003e] [-y] Remove the schedules configuration for an item in the specified component. edgecmd remove Schedule -cid Modbus1 -id Schedule3 -y edgecmd remove Schedule -cid \u003ccomponentId\u003e [-y] Remove the schedules configuration for the specified component. edgecmd remove Schedule -cid OpcUa1 edgecmd help Schedule ???cid \u003ccomponentId\u003e Display help output for the schedules facet. edgecmd help Schedule -cid Modbus1 Data filters facet configuration EdgeCmd command Description Examples edgecmd get DataFilters -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Get the data filters configuration for the specified component. edgecmd get DataFilters -cid OpcUa1 edgecmd set DataFilters -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Import the data filters configuration for the specified component. edgecmd set DataFilters -cid Modbus1 -file C:\\Users\\TestUser\\DataFilters\\Configuration.json edgecmd add DataFilters -cid \u003ccomponentId\u003e -id \u003citemid\u003e [-AbsoluteDeadband \u003cvalue\u003e] [-PercentChange \u003cvalue\u003e] [-ExpirationPeriod \u003cvalue\u003e] Add the data filters configuration for the specified component. edgecmd add DataFilters -cid OpcUa1 -id DuplicateData -AbsoluteDeadband 0 -PercentChange 35 edgecmd edit DataFilters -cid \u003ccomponentId\u003e -id \u003citemid\u003e [-AbsoluteDeadband \u003cvalue\u003e] [-PercentChange \u003cvalue\u003e] [-ExpirationPeriod \u003cvalue\u003e] Change the data filters configuration for the specified component. edgecmd edit DataFilters -cid Modbus1 -id DuplicateData -AbsoluteDeadband 3 -PercentChange 35 edgecmd remove DataFilters -cid \u003ccomponentId\u003e [-id \u003citemid\u003e] [-y] Remove the data filters configuration for an item in the specified component. edgecmd remove DataFilters -cid OpcUa1 -y edgecmd help DataFilters ???cid \u003ccomponentId\u003e Display help output for the data filters facet. edgecmd help DataFilters -cid Modbus1 Data source facet configuration EdgeCmd command Description Examples edgecmd get DataSource -cid \u003ccomponentId\u003e Get the data source configuration for the specified component. edgecmd get DataSource -cid OpcUa1 edgecmd set DataSource -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Import the data source configuration for the specified component. edgecmd set DataSource -cid Modbus1 -file C:\\Users\\TestUser\\DataSource\\Configuration.json edgecmd set DataSource -cid \u003ccomponentId\u003e [-\u003cadapterSpecificParameter\u003e \u003cvalue\u003e] Import the data source configuration parameter for the specified component. edgecmd set DataSource -cid OpcUa1 -UseSecureConnection true edgecmd edit DataSource -cid \u003ccomponentId\u003e [-\u003cadapterSpecificParameter\u003e \u003cvalue\u003e] Change the data source configuration parameter for the specified component. edgecmd edit DataSource -cid Modbus1 -UseSecureConnection false edgecmd remove Datasource -cid \u003ccomponentId\u003e [-y] Remove the data source configuration for the specified component. edgecmd remove Datasource -cid OpcUa1 -y edgecmd help Datasource -cid \u003ccomponentId\u003e Display the help output for the data source facet. edgecmd help Datasource -cid Modbus1 Data selection facet configuration EdgeCmd command Description Examples edgecmd get DataSelection -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Get the data selection configuration for the specified component. edgecmd get DataSelection -cid Modbus1 -file C:\\Users\\TestUser\\DataSelection\\Configuration.json edgecmd set DataSelection -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Import the data selection configuration for the specified component. edgecmd set DataSelection -cid OpcUa1 edgecmd get DataSelection -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] -csv Display the data selection configuration for the specified component in CSV format. edgecmd get DataSelection -cid Modbus1 -file C:\\Users\\TestUser\\DataSelection\\Configuration.csv -csv edgecmd set DataSelection -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] -csv Import the data selection configuration for the specified component in CSV format. edgecmd set DataSelection -cid OpcUa1 -csv edgecmd add DataSelection -cid \u003ccomponentId\u003e -id \u003citemid\u003e] [-\u003cadapterSpecificParameter\u003e \u003cvalue\u003e] Add the data selection configuration for the specified component. edgecmd add DataSelection -cid OpcUa1 -id Custom1 -Name RandomName edgecmd edit DataSelection -cid \u003ccomponentId\u003e [-id \u003citemid\u003e] [-\u003cadapterSpecificParameter\u003e \u003cvalue\u003e] Change the data selection configuration for the specified component. edgecmd edit DataSelection -cid Modbus1 -Selected true edgecmd remove DataSelection -cid \u003ccomponentId\u003e [-id \u003citemid\u003e] [-y] Remove the data selection configuration for an item in the specified component. edgecmd remove DataSelection -cid OpcUa1 -id Random1 edgecmd remove DataSelection -cid \u003ccomponentId\u003e [-y] Remove the data selection configuration for the specified component. edgecmd remove DataSelection -cid Modbus1 -y edgecmd help DataSelection -cid \u003ccomponentId\u003e Display help output for data selection facet. edgecmd help DataSelection -cid OpcUa1 General facet configuration EdgeCmd command Description Examples edgecmd get \u003cFacetName\u003e -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Get the configuration for the specified facet in the specified component. edgecmd get Logging -cid Modbus1 edgecmd set \u003cFacetName\u003e -cid \u003ccomponentId\u003e [-file \u003cfilepath\u003e] Import the configuration for the specified facet in the specified component. edgecmd set DataFilters -cid OpcUa1 edgecmd add \u003cFacetName\u003e -cid \u003ccomponentId\u003e [-\u003cfacetSpecificParameter\u003e \u003cvalue\u003e] Add the configuration for the specified facet in the specified component. edgecmd add Logging -cid Modbus1 -LogFileCountLimit 30 edgecmd edit \u003cFacetName\u003e -cid \u003ccomponentId\u003e [-\u003cfacetSpecificParameter\u003e \u003cvalue\u003e] Change the configuration for the specified facet in the specified component. edgecmd edit DataFilters -cid OpcUa1 -AbsoluteDeadband 0 edgecmd remove \u003cFacetName\u003e -cid \u003ccomponentId\u003e [-y] Remove the configuration for the specified facet in the specified component. edgecmd remove Logging -cid Modbus1 -y edgecmd help \u003cFacetName\u003e -cid \u003ccomponentId\u003e Display help out output for the specified facet in specified component. edgecmd help DataFilters -cid OpcUa1 EDS configuration Storage configuration EdgeCmd command Description Examples edgecmd get Storage Get the Storage configuration. edgecmd set Storage [-file \u003cstring\u003e] Import the Storage configuration. edgecmd set Storage -file C:\\Users\\TestUser\\Storage\\Configuration.json edgecmd reset Storage [-y] Reset the Storage configuration. edgecmd reset Storage -y edgecmd help Storage Display help output for the Storage configuration. Runtime configuration EdgeCmd command Description Examples edgecmd get Runtime Get the runtime configuration. edgecmd set Runtime [-file \u003cfilepath\u003e] Import the runtime configuration. edgecmd set Runtime -file C:\\Users\\TestUser\\Runtime\\Configuration.json edgecmd edit Runtime [-parameter \u003cvalue\u003e] Change the runtime configuration. edgecmd edit Runtime edgecmd help Runtime Display help output for the runtime configuration. Diagnostics configuration EdgeCmd command Description edgecmd get Diagnostics Get the diagnostics configuration. edgecmd get Version Get the version information. edgecmd get FailoverState Get the failover state information. Data discovery configuration EdgeCmd command Description Examples edgecmd add discoveries -cid \u003ccomponentId\u003e Start a new discovery operation for the specified component and return the status object containing the generated Id of the discovery. edgecmd add discoveries -cid Mqtt1 edgecmd get discoveries -cid \u003ccomponentId\u003e Get the active and completed discovery status information for the specified component. edgecmd get discoveries -cid Mqtt1 edgecmd get discoveries -cid \u003ccomponentId\u003e -id \u003cdiscoveryId\u003e -result [-csv] [-file \u003cfilename\u003e] Get the result of the specified discovery for the specified component. edgecmd get discoveries -cid Mqtt1 -id 1 -result edgecmd add discoveries -cid \u003ccomponentId\u003e -query \"\u003cqueryFilter\u003e\" -id \u003cdiscoveryId\u003e Start a new discovery operation for the specified component with the specified query. edgecmd add discoveries -cid Mqtt1 -query \"+/+/Device90\" \"+ + Device90\" -id 1 edgecmd get discoveries -cid \u003ccomponentId\u003e -id \u003cdiscoveryId\u003e -result -query diff=\u003cdiscoveryId\u003e [-csv] Get the differences between two specified discoveries of the specified component edgecmd get discoveries -cid Mqtt1 -id 1 -result -query diff=2 edgecmd add dataselection -cid \u003ccomponentId\u003e -select -query discoveryId=\u003cdiscoveryId\u003e Add the specified discovery result to the data selection and set all items to be selected. edgecmd add dataselection -cid Mqtt1 -select -query discoveryId=1 edgecmd get dataselection -cid \u003ccomponentId\u003e -query diff=\u003cdiscoveryId\u003e [-csv] Compare the data selection against a discovery result. edgecmd get dataselection -cid Mqtt1 -query diff=2 edgecmd remove discoveries -cid \u003ccomponentId\u003e -id \u003cdiscoveryId\u003e -result [-y] Remove only the result of the specified discovery from the specified component and cancel discovery if active. edgecmd remove discoveries -cid Mqtt1 -id 2 -result -y edgecmd remove discoveries -cid \u003ccomponentId\u003e -id \u003cdiscoveryId\u003e [-y] Remove the discovery state and result from the specified component and cancel discovery if active. edgecmd remove discoveries -cid Mqtt1 -id 2 -y edgecmd cancel discoveries -cid \u003ccomponentId\u003e -id \u003cdiscoveryId\u003e Cancel the discovery for the specified component. edgecmd cancel discoveries -cid Mqtt1 -id 2 History recovery configuration EdgeCmd command Description Examples edgecmd add historyrecoveries -cid \u003ccomponentId\u003e -StartTime \u003ctime\u003e Start the history recovery for the specified component. edgecmd add historyrecoveries -cid Mqtt1 -StartTime 2021-01-09T05:55:00.0 edgecmd delete historyrecoveries -cid \u003ccomponentId\u003e -id \u003chistoryRecoveryId\u003e Cancel the history recovery for the specified component and delete its state. edgecmd delete historyrecoveries -cid Mqtt1 -id HistoryRecovery1 edgecmd cancel historyrecoveries-cid \u003ccomponentId\u003e -id \u003chistoryRecoveryId\u003e Cancel the history recovery for the specified component. edgecmd cancel historyrecoveries -cid Mqtt1 -id HistoryRecovery1 edgecmd resume historyrecoveries -cid \u003ccomponentId\u003e -id \u003chistoryRecoveryId\u003e Resume a failed history recovery. edgecmd resume historyrecoveries -cid Mqtt1 -id HistoryRecovery1 Secrets management configuration EdgeCmd command Description Examples edgecmd get secrets Returns the entire secrets configuration. edgecmd get secrets -id \u003csecretId\u003e Returns a single secret. edgecmd get secrets -id exampleSecret edgecmd set secrets -file \u003cfilePath\u003e Creates/Updates Creates Updates the entire secret configuration. edgecmd set secrets -file C:\\Users\\TestUser\\Secrets\\Configuration.json edgecmd set secrets -id \u003csecretId\u003e -value \u003csecretValue\u003e [-description \u003cdescription\u003e] [-expirationDate \u003cexpirationDate\u003e] Updates an existing secret or adds a single secret into the current configuration. edgecmd set secrets -id exampleSecret -value secretValue -description secretDescription -expirationDate 2025-06-19T00:00:00 edgecmd remove secrets [-y] Deletes the entire secrets configuration. edgecmd remove secrets -id \u003csecretId\u003e [-y] Deletes a single secret. edgemcd remove secrets -id exampleSecret edgecmd help secrets Returns secrets help information. Client failover configuration EdgeCmd command Description Examples edgecmd get clientfailover Returns the client failover configuration. edgecmd remove clientfailover [-y] Deletes the entire client failover configuration. edgecmd add clientfailver [-cid System] -file \u003cfilePath\u003e Creates a client failover configuration. Fails if the client failover configuration already exists. edgecmd add clientfailover -file C:\\Users\\TestUser\\ClientFailover\\Configuration.json edgecmd set clientfailover [-cid System] -file \u003cfilePath\u003e Replaces the existing client failover configuration. edgecmd set clientfailover -file C:\\Users\\TestUser\\ClientFailover\\Configuration.json edgecmd help clientfailover Returns the help information for client failover."
                                                },
    "content/reference/eds-configuration/retrieve-eds-configuration.html":  {
                                                                                "href":  "content/reference/eds-configuration/retrieve-eds-configuration.html",
                                                                                "title":  "Retrieve EDS configuration",
                                                                                "keywords":  "Retrieve EDS configuration Use EdgeCmd utility to retrieve the configuration of EDS. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Retrieve Storage component configuration Complete the following steps to retrieve EDS\u0027s storage component configuration: Access EdgeCmd utility through the command line. Run the following command: edgecmd get -cid Storage Retrieve periodic egress endpoints configuration Complete the following steps to retrieve EDS\u0027s periodic egress endpoint configuration: Access EdgeCmd utility through the command line. Run the following command: edgecmd get PeriodicEgressEndpoints Retrieve runtime configuration Complete the following steps to retrieve EDS\u0027s runtime configuration: Access EdgeCmd utility through the command line. Run the following command: edgecmd get Runtime"
                                                                            },
    "content/reference/reference.html":  {
                                             "href":  "content/reference/reference.html",
                                             "title":  "Reference",
                                             "keywords":  "Reference Use EdgeCmd utility to access help on how to use EdgeCmd utility itself and to retrieve configuration information for AVEVA adapters and their components. The tables in EdgeCmd commands provide a quick overview of all commands available in EdgeCmd utility."
                                         },
    "content/reference/retrieve-diagnostics-functions.html":  {
                                                                  "href":  "content/reference/retrieve-diagnostics-functions.html",
                                                                  "title":  "Retrieve diagnostics functions",
                                                                  "keywords":  "Retrieve diagnostics functions Use EdgeCmd utility to retrieve diagnostics functions of the platform and components. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port 5591 \u003cRestOfTheCommand\u003e Retrieve diagnostics Access EdgeCmd utility through the command line. Run the following command: edgecmd get Diagnostics Sample output { \"timestamp\": \"2020-07-15T18:27:59.4804167Z\", \"processIdentifier\": 5744, \"startTime\": \"2020-07-20T21:26:45.9662964Z\", \"workingSet\": 41.90625, \"totalProcessorTime\": 137.578125, \"totalUserProcessorTime\": 73.53125, \"totalPrivilegedProcessorTime\": 64.046875, \"threadCount\": 23, \"handleCount\": 628, \"managedMemorySize\": 8.916587829589844, \"privateMemorySize\": 49.54296875, \"peakPagedMemorySize\": 57.21484375, \"storageTotalSize\": 486699.0859375, \"storageFreeSpace\": 365912.98828125 } Retrieve version Access EdgeCmd utility through the command line. Run the following command: edgecmd get Version Sample output { \"Application Version\": \".0.234\", \".Net Core Version\": \".NET Core 3.1.5\", \"Operating System\": \"Microsoft Windows 10.0.18363\" } Retrieve failover state Access EdgeCmd utility through the command line. Run the following command: edgecmd get FailoverState Sample output { \"role\": \"Secondary\", \"lastDataProcessedTime\": \"0001-01-01T00:00:00\", \"failoverScore\": 0, \"adapterState\": \"Running\" }"
                                                              },
    "content/reference/retrieve-edgecmd-utility-help.html":  {
                                                                 "href":  "content/reference/retrieve-edgecmd-utility-help.html",
                                                                 "title":  "Retrieve EdgeCmd utility help",
                                                                 "keywords":  "Retrieve EdgeCmd utility help EdgeCmd utility provides you with help output for any operation and from any component running within an Adapter. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd help -port 5591 \u003cRestOfCommand\u003e View application help instructions Complete the following steps to view help instructions for the entire application: Access EdgeCmd utility through the command line. Run the following command: edgecmd help View component help instructions Complete the following steps to view help instructions for configuration of a registered component that the adapter supports: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003ccomponentId\u003e with ID of the component for which you want to see help output. Then press Enter. edgecmd help -cid \u003ccomponentId\u003e Under Examples , see Configuration help for the System component . Note: The help output also provides examples of commands that you can run to configure the component. View component facet help instructions Complete the following steps to view configuration help instructions for a specific facet within a component that the adapter supports: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003cfacetName\u003e with the facet name and \u003ccomponentId\u003e with the ID of the component for which you want to see help output. Then press Enter. edgecmd help \u003cfacetName\u003e -cid \u003cComponentId\u003e Under Examples , see Configuration help for the buffering facet within the System component . Examples Configuration help for the System component edgecmd help -cid System --------------------------------------------------------------------------------------------------------- Component System command-line facet =\u003e \u0027Logging\u0027 --------------------------------------------------------------------------------------------------------- LogLevel [Optional] Desired log level settings. Options: Trace, Debug, Information, Warning, Error, Critical, None. LogFileSizeLimitBytes [Optional] Maximum size in bytes of log files that the service will create for this component. Must be no less than 1000. LogFileCountLimit [Optional] Maximum number of log files that the service will create for this component. Must be a positive integer. --------------------------------------------------------------------------------------------------------- Component System command-line facet =\u003e \u0027HealthEndpoints\u0027 --------------------------------------------------------------------------------------------------------- Id [Optional] Id of existing configuration to be edited of removed. Endpoint [Required] URL of OMF destination UserName [Required group 1] User name used for authentication to PI Web API OMF endpoint. Password [Required group 1] Password used for authentication to PI Web API OMF endpoint. ClientId [Required group 2] Client ID used for authentication to AVEVA Data Hub. ClientSecret [Required group 2] Client Secret used for authentication to AVEVA Data Hub. TokenEndpoint [Optional group 2] URL of OMF destination\u0027s token service. ValidateEndpointCertificate [Optional] If true, endpoint certificate will be validated (recommended). If false, any endpoint certificate will be accepted. OSIsoft strongly recommends using disabled endpoint certificate validation for testing purposes only. Note: Only one Required group must be specified. Group 1 for PI Web API or Group 2 for ADH. --------------------------------------------------------------------------------------------------------- Component System command-line facet =\u003e \u0027Components\u0027 --------------------------------------------------------------------------------------------------------- ComponentId [Required] ID of the hosted component. ComponentType [Required] Type of the hosted component. Valid component types: OmfEgress, OpcUa. --------------------------------------------------------------------------------------------------------- Component System command-line facet =\u003e \u0027Buffering\u0027 --------------------------------------------------------------------------------------------------------- BufferLocation [Required] Location of the on-disk buffers. MaxBufferSizeMB [Optional] Maximum size of the on-disk or in-memory buffers. EnablePersistentBuffering [Optional] Enable or disable on-disk buffering. --------------------------------------------------------------------------------------------------------- Component System command-line facet =\u003e \u0027General\u0027 --------------------------------------------------------------------------------------------------------- EnableDiagnostics [Optional] Enable application diagnostics. MetadataLevel [Optional] Defines amount of metadata sent to OMF endpoints. Options: None, Low, Medium, High. Configuration help for the Buffering facet within the System component edgecmd help Buffering -cid System --------------------------------------------------------------------------------------------------------- Component System command-line facet =\u003e \u0027Buffering\u0027 --------------------------------------------------------------------------------------------------------- BufferLocation [Required] Location of the on-disk buffers. MaxBufferSizeMB [Optional] Maximum size of the on-disk or in-memory buffers. EnablePersistentBuffering [Optional] Enable or disable on-disk buffering."
                                                             },
    "content/reference/retrieve-existing-configuration.html":  {
                                                                   "href":  "content/reference/retrieve-existing-configuration.html",
                                                                   "title":  "Retrieve existing configuration",
                                                                   "keywords":  "Retrieve existing configuration Use EdgeCmd utility to view the configuration for each part of the adapter. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port 5591 Configuration \u003cRestOfTheCommand\u003e View adapter configuration Complete the following steps to view the configuration for the adapter: Access EdgeCmd utility through the command line. Type the following in the command line and then press Enter. edgecmd get application Under Examples , see View the configuration of the adapter . View configured components Complete the following steps to view the components currently configured on the adapter: Access EdgeCmd utility through the command line. Type the following in the command line and then press Enter. edgecmd get components View a specific component configuration Complete the following steps to view the configuration of a specific component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003ccomponentId\u003e with the ID of the component for which you want to see the configuration. Then press Enter. edgecmd get -cid \u003ccomponentId\u003e Under Examples , see View the configuration of the System component . View a specific facet configuration Complete the following steps to view the configuration of a specific facet of an adapter component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003cfacetName\u003e with the name of the facet, and \u003ccomponentId\u003e with the ID of the component for which you want to see the configuration. Then press Enter. edgecmd get \u003cfacetName\u003e -cid \u003ccomponentId\u003e Under Examples , see View the configuration of the Logging facet within the OmfEgress component . View a specific facet entry configuration Complete the following steps to view the configuration of a specific facet entry of a component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing \u003cfacetName\u003e with the name of the facet, \u003ccomponentId\u003e with the ID of the component and \u003cindex\u003e with the name of the facet entry for which you want to see the configuration. edgecmd get \u003cfacetName\u003e -cid \u003ccomponentId\u003e -id \u003cindex\u003e Under Examples , see View the configuration of a specific entry in the HealthEndpoints facet within the System component . Examples View the configuration of the adapter edgecmd get application { \"OmfEgress\": { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"DataEndpoints\": [] }, \"System\": { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"HealthEndpoints\": [], \"Components\": [ { \"componentId\": \"OmfEgress\", \"componentType\": \"OmfEgress\" }, { \"componentId\": \"OpcUa1\", \"componentType\": \"OpcUa\" } ], \"Buffering\": { \"bufferLocation\": \"C:/ProgramData/OSIsoft/Adapters/OpcUa/Buffers\", \"C: ProgramData OSIsoft Adapters OpcUa Buffers\", \"maxBufferSizeMB\": 1024, \"enablePersistentBuffering\": true }, \"General\": { \"enableDiagnostics\": true, \"metadataLevel\": \"Medium\" } }, \"OpcUa1\": { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"DataSource\": {}, \"DataFilters\": [ { \"id\": \"DuplicateData\", \"absoluteDeadband\": 0, \"percentChange\": null, \"expirationPeriod\": \"1:00:00\" } ], \"DataSelection\": [], \"ClientSettings\": {} } } View the configuration of the System component edgecmd get component System { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"HealthEndpoints\": [], \"Components\": [ { \"componentId\": \"OmfEgress\", \"componentType\": \"OmfEgress\" }, { \"componentId\": \"OpcUa1\", \"componentType\": \"OpcUa\" } ], \"Buffering\": { \"bufferLocation\": \"C:/ProgramData/OSIsoft/Adapters/OpcUa/Buffers\", \"C: ProgramData OSIsoft Adapters OpcUa Buffers\", \"maxBufferSizeMB\": 1024, \"enablePersistentBuffering\": true }, \"General\": { \"enableDiagnostics\": true, \"metadataLevel\": \"Medium\" } } View the configuration of the Logging facet within the OmfEgress component edgecmd get Logging -cid OmfEgress { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 } View the configuration of a specific entry in the HealthEndpoints facet within the System component edgecmd get HealthEndpoints -cid System -id PWA { \"id\": \"PWA\", \"endpoint\": \"https://localhost:5821/piwebapi/omf\", \"https:  localhost:5821 piwebapi omf\", \"userName\": \"user-54\", \"password\": \"***************\", \"clientId\": null, \"clientSecret\": null, \"tokenEndpoint\": null, \"validateEndpointCertificate\": true }"
                                                               },
    "content/release-notes/release-notes.html":  {
                                                     "href":  "content/release-notes/release-notes.html",
                                                     "title":  "Release notes",
                                                     "keywords":  "Release notes EdgeCmd utility 1.3 Overview Edge Data Store (EDS) and AVEVA Adapters have a REST API that allows user interaction. Configuration is one of the most common interactions. This command line tool, EdgeCmd utility, uses this REST API to apply all changes and administration functions to EDS and AVEVA adapters. Specifically, EdgeCmd utility\u0027s command line interface uses configuration and administration functions of the REST API, so the user does not need to know the REST routes. EdgeCmd utility thus improves the user experience, facilitates easier scripting experiences and provides built-in help. For more information, see EdgeCmd utility . Fixes and enhancements Fixes Updated layout of EdgeCmd help message. Enhancements Changes from version 1.2 Added support for secret management. Added support for configuring failover. Added support for retrieving failover state. Updated Windows and Linux installers to reflect new product name. Known issues There are no known issues at this time. Setup System requirements Refer to System requirements . Installation and upgrade Refer to Install EdgeCmd utility . Uninstallation Refer to Uninstall EdgeCmd utility . Security information and guidance OSIsoft is committed to releasing secure products . This section is intended to provide relevant security-related information to guide your installation or upgrade decision. OSIsoft proactively discloses aggregate information about the number and severity of security vulnerabilities addressed in each release. The tables below provide an overview of security issues addressed and their relative severity based on standard scoring . There are no security vulnerabilities in this release. Technical support and resources Refer to Technical support and feedback ."
                                                 },
    "content/troubleshooting/troubleshoot-edgecmd-utility.html":  {
                                                                      "href":  "content/troubleshooting/troubleshoot-edgecmd-utility.html",
                                                                      "title":  "Troubleshoot EdgeCmd utility",
                                                                      "keywords":  "Troubleshoot EdgeCmd utility To troubleshoot issues with EdgeCmd utility, you can start with the following troubleshooting tips. If you are unable to resolve issues with EdgeCmd utility or need additional guidance, contact AVEVA PI Support. To get more information on proper usage of EdgeCmd utility, use the help command on a particular command and facet. For more information, see Retrieve EdgeCmd utility help . Check if your adapter is using the default port number 5590 . If the adapter is using any other port number, include -port \u003cAdapterPortNumber\u003e as an argument in your command. If you do not know what port to use, check the appsettings.json file in the directory where the adapter is installed. Check if the adapter is running. EdgeCmd utility makes REST calls against an active adapter. If the adapter is not running, there is nothing to respond to those REST requests. If you run a command like Reset , add a data source configuration, edit a large data selection, or so on. Wait 20 to 60 seconds before you attempt to make more calls; the adapter needs time to process the request. If a command is not working in EdgeCmd utility, verify the command does not work in other REST clients like Postman either."
                                                                  },
    "index.html":  {
                       "href":  "index.html",
                       "title":  "EdgeCmd utility",
                       "keywords":  "EdgeCmd utility Use OSIsoft\u0027s proprietary tool, EdgeCmd utility, to configure and administer Edge Data Store and AVEVA adapters on Linux and Windows using command line arguments. Because EdgeCmd utility is a command line tool, you can make adjustments to the configuration on the fly without programming. If you prefer, you can perform all tasks available in EdgeCmd utility using REST APIs. Use EdgeCmd utility to make one-off changes; use REST APIs to configure multiple systems the same way programmatically. Use EdgeCmd utility version 1.0 to configure Edge Data Store and EdgeCmd utility versions 1.1 and 1.2 to configure AVEVA adapters. Note: Configuration and administrative REST interfaces are generally exposed through the command line."
                   },
    "README.html":  {
                        "href":  "README.html",
                        "title":  "EdgeCmd utility",
                        "keywords":  "EdgeCmd utility EdgeCmd utility is OSIsoft\u0027s proprietary tool to configure and administer Edge Data Store (EDS) and AVEVA adapters on Linux and Windows using command line arguments. This repository contains the documentation for EdgeCmd utility. You can access a readable version of this documentation here. License ?? 2019 - 2023 OSIsoft, LLC. All rights reserved. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 http:  www.apache.org licenses LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
                    },
    "technical-support-and-feedback.html":  {
                                                "href":  "technical-support-and-feedback.html",
                                                "title":  "Technical support and feedback",
                                                "keywords":  "Technical support and feedback OSIsoft provides several ways to report issues and provide feedback on EdgeCmd utility. Technical support For technical assistance with EdgeCmd utility, contact AVEVA PI Support through the AVEVA Customer Portal . We can help you identify the problem, provide workarounds and address any concerns you may have. Remote access to your facilities may be necessary during the session. Note: You must have an account set up in the AVEVA Customer Portal before you can open a case. If you do not have a portal account, see How to Get a Login to AVEVA Customer Portal . Alternatively, call AVEVA PI Support at +1 510-297-5828. When you contact AVEVA PI Support, be prepared to provide this information: Product name, version, and build numbers Details about your computer platform (CPU type, operating system, and version number) Time that the difficulty started Details of any environment changes prior to the start of the issue Summary of the issue, including any relevant log files during the time the issue occurred Documentation feedback To submit documentation feedback for EdgeCmd utility, send an email to documentation@osisoft.com . Be sure to include the following information with your feedback: Product name and version Documentation topic URL Details of the suggestion or error The technical documentation team at OSIsoft will review and respond to your feedback."
                                            }
}
