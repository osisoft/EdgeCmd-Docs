{
  "README.html": {
    "href": "README.html",
    "title": "Edgecmd",
    "keywords": "Edgecmd ( OSIsoft ) is a proven leader in enabling operation intelligence. In this GitHub repo, we provide samples which will help you get started with using OSIsoft technology. The repo includes samples against the PI Server via PI Web API, samples using OSIsoft Cloud Services ( OCS ) via the OCS API directly and using libraries, and samples creating OSIsoft Message Format ( OMF ) messages and sending them. The samples are intended to help you get started and are not production applications and libraries. The official OSIsoft samples are organized by technology and accessible through the following table: Note: these samples have transitioned to be hosted in seperate repositories based on their technology. Technology Description OCS These samples cover programming against OCS. Samples include basic samples to more advanced. Details OMF These samples highlight forming and sending OMF messages for PI and OCS. Details PI System These samples cover topics related to the PI System. Details Edge These samples cover topics related to OSIsoft Edge technologies. Details Note: The OMF samples work against both the on-prem PI System and OCS. About this repo The style guide describes the organization of the repo and the code samples provided. The test guide goes into detail about the included automated tests. The on prem testing document describes the software installed on our internal OSIsoft build agent. Feedback If you have a need for a new sample, if there is a feature or capability that should be demonstrated, or if there is an existing sample that should be in your favorite language, please reach out to us and give us feedback at https://feedback.osisoft.com under the OSIsoft GitHub Channel . Support If your support question or issue is related to an OSIsoft product (an error message, a problem with product configuration, etc...), please open a case with OSIsoft Tech Support through myOSIsoft Customer Portal ( https://my.osisoft.com ). If your support question or issue is related to a non-modified sample (or test) or documentation for the sample, please email Samples@osisoft.com. Contributions If you wish to contribute please take a look at the contribution guide . License OSI Samples are licensed under the Apache 2 license ."
  },
  "V1.0/EdgeCmd_utility_1.0.html": {
    "href": "V1.0/EdgeCmd_utility_1.0.html",
    "title": "EdgeCmd utility",
    "keywords": "EdgeCmd utility"
  },
  "V1.1/Administration/Administration_1-1.html": {
    "href": "V1.1/Administration/Administration_1-1.html",
    "title": "Administration",
    "keywords": "Administration Use EdgeCmd utility to perform administrative level functions for OSIsoft adapters, such as starting and stopping an adapter ingress component or deleting an adapter. You can also perform administrative level functions using any programming language or tool that supports making REST calls. For more information, see the respective adapter documentation."
  },
  "V1.1/Administration/Delete configuration_1-1.html": {
    "href": "V1.1/Administration/Delete configuration_1-1.html",
    "title": "Delete configuration",
    "keywords": "Delete configuration Use the EdgeCmd utility to delete adapter configuration entries or files that are no longer needed. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port=5591 Configuration <RestOfTheCommand> Note: If a command contains slashes, you must escape them as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Delete configuration entry Complete the following steps to delete a configuration entry from a collection configuration. For example, you can delete a single health endpoint of the 'HealthEndpoints' facet within the 'System' component. Access EdgeCmd utility through the command line. Type the componentId and facetName followed by the ID of the entry to be removed. Add the delete keyword and press Enter. Example: Delete endpoint_1 of the HealthEndpoints facet from the System: edgecmd Configuration System HealthEndpoints Id=endpoint_1 delete Delete configuration file Complete the following steps to delete a configuration file. For example, you can delete the configuration file of the 'HealthEndpoints' facet within the 'System' component. Access EdgeCmd utility through the command line. Type the componentId and facetName . Add the delete keyword and press Enter. Example: Delete the HealthEndpoints facet configuration file: edgecmd Configuration System HealthEndpoints delete"
  },
  "V1.1/Administration/Start or stop a component_1-1.html": {
    "href": "V1.1/Administration/Start or stop a component_1-1.html",
    "title": "Start or stop a component",
    "keywords": "Start or stop a component Complete the following steps to either start or stop a component. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port=5591 Administration <RestOfTheCommand> Note: If a command contains slashes, you must escape them as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Access EdgeCmd utility through the command line. Type one of the following in the command line, replacing <componentId> with the ID of the component, and press Enter. edgecmd Administration <ComponentId> Stop edgecmd Administration <ComponentId> Start"
  },
  "V1.1/Configuration/Configuration_1-1.html": {
    "href": "V1.1/Configuration/Configuration_1-1.html",
    "title": "Configuration",
    "keywords": "Configuration Use EdgeCmd utility to configure an adapter or adapter components directly from the command line or by pointing to a JSON file that contains the configuration. For more information about the specific configurations, see the respective adapter documentation. You can also configure adapters using any programming language or tool that supports making REST calls. For more information, see the respective adapter documentation."
  },
  "V1.1/Configuration/Configure adapter component_1-1.html": {
    "href": "V1.1/Configuration/Configure adapter component_1-1.html",
    "title": "Configure adapter component",
    "keywords": "Configure adapter component Use EdgeCmd utility to add and delete adapter components, and to configure facets of the components. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port=5591 Configuration <RestOfTheCommand> Note: If a command contains slashes, you must escape them as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Add components Complete the following steps to add a new component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> and <componentType> with the values for the component and press Enter. Note: The only valid component type is the adapter type. For example, if you are trying to register a new Modbus component, use Modbus and if you are trying to register an OPC UA component, use OpcUa . Refer to the specific adapter's user guide for the adapter's component type. edgecmd Configuration System Components componentId=<componentId> componentType=<componentType> Example : Modbus adapter component registration edgecmd Configuration System Components componentId=Modbus1 componentType=Modbus Configure a facet of a component Adapters have the following configurable facets: data source, data selection, and logging. Complete the following steps to configure a facet: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> and <facetName> with the values that you want. edgecmd Configuration <componentId> <facetName> Add key=value pairs to specify the values to change and press Enter. Example : Configuration of the data source facet of a Modbus adapter edgecmd Configuration Modbus1 DataSource IpAddress=117.23.45.110 port=502 ConnectTimeout=15000 StreamIdPrefix=\"DataSource1\" For detailed information on how to configure each adapter, see the respective adapter documentation. Delete a component Complete the following steps to delete a component from the adapter: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> with the ID of the component to delete, and press Enter. edgecmd Configuration System Components id=<componentId> delete Note: You cannot delete the Egress component because it is required for Edge Data Store to operate."
  },
  "V1.1/Configuration/Configure an adapter with JSON files_1-1.html": {
    "href": "V1.1/Configuration/Configure an adapter with JSON files_1-1.html",
    "title": "Configure an adapter with JSON Files",
    "keywords": "Configure an adapter with JSON Files Use EdgeCmd utility to import a JSON file that contains the adapter configuration into the adapter. A file import completely replaces the existing configurations; therefore, you cannot use it to change individual values in a facet without modifying others. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port=5591 Configuration <RestOfTheCommand> Import bulk configuration Complete the following steps to import a bulk configuration: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <PathToJsonFile> with the path to the file, and press Enter. edgecmd Configuration file=<PathToJsonFile> Import facet specific configuration Complete the following steps to import a facet specific configuration file for a component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> with the ID of the component, <facetName> with the name of the facet, and <PathToJsonFile> with the path to the file. Then press Enter. edgecmd Configuration <componentId> <facetName> file=<PathToJsonFile> Import facets configuration in bulk Complete the following steps to import a file with configuration for individual facets, but not individual values of a facet, as a bulk file import operation: Note: The file must contain only information for the given component ID. Access EdgeCmd utility through the command line. Type the file name as shown in the Logging.json example and press Enter. edgecmd Configuration file=\"~/Logging.json\" Example: { \"Modbus1\": { \"Logging\": { \"logLevel\": \"Warning\", \"logFileSizeLimitBytes\": 19283, \"logFileCountLimit\": 999 } } } Note: The command only affects the specified key=value pairs for the 'Logging' facet in the 'Modbus1' component, it does not change any other components or facets. However, import affects all key=value pairs in the facet. If you import the following example JSON file, the 'logLevel' and 'logFileSizeLimitBytes' values are modified and the remaining values in the 'Logging' facet are reset to their default values (logFileCountLimit). { \"Modbus1\": { \"Logging\": { \"logLevel\": \"Warning\", \"logFileSizeLimitBytes\": 19283 } } }"
  },
  "V1.1/Configuration/Configure an adapter within commands_1-1.html": {
    "href": "V1.1/Configuration/Configure an adapter within commands_1-1.html",
    "title": "Configure an adapter within commands",
    "keywords": "Configure an adapter within commands Use EdgeCmd utility to configure an adapter using only commands or by pointing to JSON files. For more information, see Configure an adapter with JSON files . Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port=5591 Configuration <RestOfTheCommand> Note: If a command contains slashes, you must escape them as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Change all values of a facet Complete the following steps to change all values of a facet: Access EdgeCmd utility through the command line. Type edgecmd Configuration and then the componentId and facetName , followed by the key=value pairs. Then press Enter. Example: Change all values in the 'Logging' facet: edgecmd Configuration Modbus1 Logging LogLevel=Warning LogFileSizeLimitBytes=32768 LogFileCountLimit=5 Configure key=value pairs in a facet Complete the following steps to configure any number of valid key=value pairs in a facet: Access EdgeCmd utility through the command line. Type edgecmd Configuration and then the componentId and facetName followed by the key=value pairs to change, and press Enter. Example: Change a single value in the 'Logging' facet: edgecmd Configuration Modbus1 Logging LogFileCountLimit=5 Add an entry to a collection configuration Complete the following steps to add an entry to a collection configuration: Access EdgeCmd utility through the command line. Type edgecmd Configuration and then the componentId and facetName followed by the key=value pairs, and press Enter. Example: Add the 'Health Endpoints' facet to the 'System' component: edgecmd Configuration Modbus1 HealthEndpoints Id=endpoint_1 Endpoint=endpointURL UserName=UserName Password=Password Note: If an entry with the specified ID already exists, it is updated based on the new key=value pairs."
  },
  "V1.1/EdgeCmd_utility_1-1.html": {
    "href": "V1.1/EdgeCmd_utility_1-1.html",
    "title": "EdgeCmd utility",
    "keywords": "EdgeCmd utility Use OSIsoft's proprietary tool, EdgeCmd utility, to configure and administer OSIsoft adapters on Linux and Windows using command line arguments. Because EdgeCmd utility is a command line tool, you can make adjustments to the configuration on the fly without programming. If you prefer, you can perform all tasks available in EdgeCmd utility using REST APIs. Use EdgeCmd utility to make one-off changes; use REST APIs to configure multiple systems the same way programmatically. Note: Configuration and administrative REST interfaces are generally exposed through the command line."
  },
  "V1.1/index.html": {
    "href": "V1.1/index.html",
    "title": "EdgeCmd utility",
    "keywords": "EdgeCmd utility Use OSIsoft's proprietary tool, EdgeCmd utility, to configure and administer OSIsoft adapters on Linux and Windows using command line arguments. Because EdgeCmd utility is a command line tool, you can make adjustments to the configuration on the fly without programming. If you prefer, you can perform all tasks available in EdgeCmd utility using REST APIs. Use EdgeCmd utility to make one-off changes; use REST APIs to configure multiple systems the same way programmatically. Note: Configuration and administrative REST interfaces are generally exposed through the command line. <!-- # EdgeCmd utility ======= - [EdgeCmd utility](xref:EdgecmdUtility1-1) - [Configuration](xref:Configuration1-1) - [Configure adapter](xref:ConfigureAdapter1-1) - [Configure adapter component](xref:ConfigureAdapterComponent1-1) - [Administration](xref:Administration1-1) - [Delete configuration](xref:DeleteConfiguration1-1) - [Start or stop a component](xref:StartOrStopAComponent1-1) - [Reference](xref:Reference1-1) - [Retrieve EdgeCmd utility help](xref:RetrieveEdgeCmdUtilityHelp1-1) - [Retrieve existing configuration](xref:RetrieveExistingConfiguration1-1) - [EdgeCmd commands](xref:EdgeCmdCommands1-1) -->"
  },
  "V1.1/Installation/Access EdgeCmd utility_1-1.html": {
    "href": "V1.1/Installation/Access EdgeCmd utility_1-1.html",
    "title": "Access EdgeCmd utility",
    "keywords": "Access EdgeCmd utility To use EdgeCmd utility, you can access it from a command prompt or terminal window. The following procedures use the default installation location. If you specified a different location during installation, use that location in your commands. Access EdgeCmd utility on Windows Complete the following steps to access EdgeCmd utility on Windows: Open a command prompt. Change to the following directory: C:\\Program Files\\OSIsoft\\EdgeCmd Type edgecmd.exe and press Enter. Note: Specify the full path when you use EdgeCmd utility on Windows. Access EdgeCmd utility on Linux Complete the following steps to access EdgeCmd utility on Linux: Open a terminal window. Type the following path in the terminal and press Enter: /opt/OSIsoft/EdgeCmd/edgecmd Note: You can access EdgeCmd utility without using the full path on Linux."
  },
  "V1.1/Installation/Installation_1-1.html": {
    "href": "V1.1/Installation/Installation_1-1.html",
    "title": "Installation",
    "keywords": "Installation The following sections provide instructions to install the EdgeCmd utility on Windows or Linux and to access the utility once it is installed. Install EdgeCmd utility on Windows Note: You must have administrative privileges to run the installer. Complete the following steps to install the EdgeCmd utility on Windows: Copy the EdgeCmd.msi file to the file system of the device. To start the installer, double-click the EdgeCmd.msi file in Windows Explorer. Note: To change the install path from the default path of C:\\Program Files\\OSIsoft\\EdgeCmd , enter the following command in the command prompt and update the <file_path>. OSIsoft recommends you use the default value. msiexec /i EdgeCmd.msi INSTALLFOLDER=<file_path> Note: You must type INSTALLFOLDER in all caps. The EdgeCmd utility is installed on your device. Install EdgeCmd utility on Linux Note: You must have administrative privileges to install the software, for example, root or sudo privilege. Complete the following steps to install the EdgeCmd utility on Linux: Open a terminal window and type the sudo command for the appropriate EdgeCmd .deb file for your processor: Debian 9 or later (Intel/AMD 64-bit processors) sudo apt install ./EdgeCmd_linux-x64.deb Debian 9 or later (ARM32, Raspberry PI 2,3,4: Raspbian, BeagleBone) sudo apt install ./EdgeCmd_linux-arm.deb Debian 9 or later (Raspberry PI 3,4: Ubuntu ARM64 Server, Google Coral Dev Board, Nvidia Nano Jetson) sudo apt install ./EdgeCmd_linux-arm64.deb A validation check for prerequisites is completed. After the check for prerequisites succeeds, you are prompted with the option to change the default port of the adapter, which is 5590 . If the Linux OS is up to date, the install will succeed and the EdgeCmd utility is running on your device. If the install fails, run the following commands from the terminal window and try the install again: sudo apt update sudo apt upgrade"
  },
  "V1.1/Reference/EdgeCmd commands_1-1.html": {
    "href": "V1.1/Reference/EdgeCmd commands_1-1.html",
    "title": "EdgeCmd commands",
    "keywords": "EdgeCmd commands The following tables provide a description of every command available in EdgeCmd utility. Every command used with the EdgeCmd utility has to be preceded by edgecmd . Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port=5591 Configuration <RestOfTheCommand> Note: If a command contains slashes, you must escape them as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany Help edgecmd command Description Examples edgecmd -help Display general instructions on how to use the edgecmd utility. edgecmd -help Configuration <componentId> Display help for a specific adapter component. edgecmd -help Configuration System edgecmd -help Configuration <componentId> <facetName> Display help for a specific facet of an adapter component. edgecmd -help Configuration System Logging Configuration System edgecmd command Description Examples edgecmd Configuration Display the entire configuration for every adapter component. edgecmd Configuration System Components Display the components that are currently configured. edgecmd Configuration System Components componentId=<componentId> componentType=<componentType> Add a new component. edgecmd Configuration System Components componentId=Modbus1 componentType=Modbus edgecmd Configuration System Components id=<componentId> delete Delete a component. edgecmd Configuration System Components id=Modbus1 delete Components edgecmd command Description Examples edgecmd Configuration <componentId> Display component specific configuration. edgecmd Configuration System or edgecmd Configuration OpcUa1 edgecmd Configuration <componentId> <facetName> Display facet specific configuration of a component. edgecmd Configuration System Logging edgecmd Configuration <componentId> <facetName> id=<IndexToRetrieve> Display the configuration of a specific entry of a facet. edgecmd Configuration System HealthEndpoints id=Endpoint1 edgecmd Configuration <componentId> DataSource Configure the data source for the adapter. For examples, see PI Adapter for OPC UA data source configuration and PI Adapter For Modbus TCP data source configuration edgecmd Configuration <componentId> DataSelection Configure the data selection for the adapter. For examples, see PI Adapter for OPC UA data selection configuration and PI Adapter for Modbus TCP data selection configuration edgecmd Configuration <componentId> Logging Configure logging for a component. edgecmd Configuration OpcUa1 Logging Configuration with JSON files edgecmd command Description Examples edgecmd Configuration file=<PathToJsonFile> Import a bulk configuration through a JSON file. edgecmd Configuration file=\"~/Bulk_Storage_Runtime.json\" edgecmd Configuration <componentId> <facetName> file=<PathToJsonFile> Import a facet specific configuration file for a component. edgecmd Configuration Modbus1 DataSource file=\"~/System_Logging.json\" Administration edgecmd command Description Examples edgecmd Administration <componentId> Stop Stops a component. Only applicable for adapter type components. edgecmd Administration Modbus1 Stop edgecmd Administration <componentId> Start Starts a component. Only applicable for adapter type components. edgecmd Administration Modbus1 Start"
  },
  "V1.1/Reference/Reference_1-1.html": {
    "href": "V1.1/Reference/Reference_1-1.html",
    "title": "Reference",
    "keywords": "Reference Use the EdgeCmd utility to access help on how to use EdgeCmd utility itself and to retrieve configuration information for OSIsoft adapters and their components. The tables in EdgeCmd commands provide a quick overview of all commands available in EdgeCmd utility."
  },
  "V1.1/Reference/Retrieve EdgeCmd utility help_1-1.html": {
    "href": "V1.1/Reference/Retrieve EdgeCmd utility help_1-1.html",
    "title": "Retrieve EdgeCmd utility help",
    "keywords": "Retrieve EdgeCmd utility help The EdgeCmd utility provides instructions on how to use EdgeCmd utility. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -help -port=5591 Configuration <RestOfTheCommand> Note: If a command contains slashes, you must escape them as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany View general help instructions Complete the following steps to view help instructions on how to use the Edgecmd utility: Access EdgeCmd utility through the command line. Type the following in the command line and press Enter. edgecmd -help View component help instructions Complete the following steps to view help instructions for configuration of a registered component that the adapter supports: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> with the value that you want, and press Enter. edgecmd -help Configuration <componentId> Under Examples , see Configuration help for the System component . Note: The help output also provides examples of commands that you can run to configure the component. View component facet help instructions Complete the following steps to view configuration help instructions for a specific facet within a component that the adapter supports: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> and <facetName> with the value that you want, and press Enter. edgecmd -help Configuration <componentId> <facetName> Under Examples , see Configuration help for the buffering facet within the System component . Examples Configuration help for the System component edgecmd -help Configuration System ------------------------------------------------------------------------------------------------- Component System command-line options => 'Logging' ------------------------------------------------------------------------------------------------- LogLevel [Required] Desired log level settings. Options: Verbose, Information, Warning, Error, Fatal. LogFileSizeLimitBytes [Required] Maximum size in bytes of log files that the service will create for this component. Must be no less than 1000. LogFileCountLimit [Required] Maximum number of log files that the service will create for this component. Must be a positive integer. Example: .\\edgecmd Configuration System Logging LogLevel=Warning Example: .\\edgecmd Configuration System Logging LogFileSizeLimitBytes=32768 Example: .\\edgecmd Configuration System Logging LogFileCountLimit=5 ------------------------------------------------------------------------------------------------- Component System command-line options => 'HealthEndpoints' ------------------------------------------------------------------------------------------------- Id [Optional] Id of existing configuration to be edited of removed. Endpoint [Required] URL of OMF destination UserName [Required group 1] User name used for authentication to PI Web API OMF endpoint. Password [Required group 1] Password used for authentication to PI Web API OMF endpoint. ClientId [Required group 2] Client ID used for authentication to OSIsoft Cloud Services. ClientSecret [Required group 2] Client Secret used for authentication to OSIsoft Cloud Services. TokenEndpoint [Optional group 2] URL of OMF destinations token service. ValidateEndpointCertificate [Optional] If true, endpoint certificate is validated (recommended). If false, any endpoint certificate is accepted. OSIsoft strongly recommends using disabled endpoint certificate validation for testing purposes only. Note: Only one Required group must be specified. Group 1 for PI Web API or Group 2 for OCS. Example: Add a new endpoint: .\\edgecmd.exe Configuration System HealthEndpoints Endpoint=endpointURL UserName=UserName Password=Password Update fields of an existing endpoint: .\\edgecmd.exe Configuration System HealthEndpoints Id=Endpoint1 Password=newPassword View existing endpoints: .\\edgecmd.exe Configuration System HealthEndpoints File Import (replaces current endpoints): .\\edgecmd.exe Configuration System HealthEndpoints File=endpoints.json Delete an endpoint: .\\edgecmd.exe Configuration System HealthEndpoints Id=Endpoint1 Delete ------------------------------------------------------------------------------------------------- Component System command-line options => 'Components' ------------------------------------------------------------------------------------------------- ComponentId [Required] ID of the hosted component. ComponentType [Required] Type of the hosted component. Example: .\\edgecmd Configuration System Components ComponentId=Modus1 ComponentType=Modbus Configuration help for the Buffering facet within the System component edgecmd -help Configuration System Buffering --------------------------------------------------------------------------------------------------------- Component System command-line options => 'Buffering' --------------------------------------------------------------------------------------------------------- BufferLocation Location of the on-disk buffers MaxBufferSizeMB Maximum size of the on-disk buffers (-1 = restricted only by available free disk space) EnableBuffering Enable or disable buffering"
  },
  "V1.1/Reference/Retrieve existing configuration_1-1.html": {
    "href": "V1.1/Reference/Retrieve existing configuration_1-1.html",
    "title": "Retrieve existing configuration",
    "keywords": "Retrieve existing configuration Use EdgeCmd utility to view the configuration for each part of the adapter. Note: The examples in this topic are using the default port number 5590 . If you specified a different port number for your adapter, you need to add it in the command. For example: edgecmd -port=5591 Configuration <RestOfTheCommand> Note: If a command contains slashes, you must escape them as follows: In Windows , add a second slash. Example: TestUser\\OilCompany becomes TestUser\\\\OilCompany In Linux , add three slashes. Example: TestUser\\OilCompany becomes TestUser\\\\\\\\OilCompany View adapter configuration Complete the following steps to view the configuration for the adapter: Access EdgeCmd utility through the command line. Type the following in the command line and press Enter. edgecmd Configuration Under Examples , see View the configuration of the adapter . View configured components Complete the following steps to view the components currently configured on the adapter: Access EdgeCmd utility through the command line. Type the following in the command line and press Enter. edgecmd Configuration System Components View a specific component configuration Complete the following steps to view the configuration of a specific component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> with the ID of the component, and press Enter. edgecmd Configuration <componentId> Under Examples , see View the configuration of the System component . View a specific facet configuration Complete the following steps to view the configuration of a specific facet of an adapter component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> and <facetName> with the ID of the component and the facet name, and press Enter. edgecmd Configuration <componentId> <facetName> Under Examples , see View the configuration of the Logging facet within the OmfEgress component . View a specific facet entry configuration Complete the following steps to view the configuration of a specific facet entry of a component: Access EdgeCmd utility through the command line. Type the following in the command line, replacing <componentId> and <facetName> with the ID of the component and the facet name. edgecmd Configuration <componentId> <facetName> id=IndexToRetrieve Add the key=value pairs for the facet to configure, for example id=IndexToRetrieve , and press Enter. Under Examples , see View the configuration of a specific entry in the HealthEndpoints facet within the System component . Examples View the configuration of the adapter edgecmd Configuration { \"System\": { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"HealthEndpoints\": [], \"Diagnostics\": { \"enableDiagnostics\": true }, \"Components\": [ { \"componentId\": \"Modbus1\", \"componentType\": \"Modbus\" }, { \"componentId\": \"Egress\", \"componentType\": \"OmfEgress\" } ], \"Buffering\": { \"bufferLocation\": \"C:/ProgramData/OSIsoft/Adapters/Modbus/Modbus/Buffers\", \"maxBufferSizeMB\": -1, \"enableBuffering\": true } }, \"Modbus1\": { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"DataSource\": {}, \"DataSelection\": [] }, \"OmfEgress\": { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"DataEndpoints\": [], \"Buffering\": { \"onDiskBufferLocation\": \"C:/ProgramData/OSIsoft/Adapters/Modbus/Modbus/Buffers\", \"onDiskMaxBufferSizeMB\": -1 } } } View the configuration of the System component edgecmd Configuration System { \"Logging\": { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 }, \"HealthEndpoints\": [], \"Diagnostics\": { \"enableDiagnostics\": true }, \"Components\": [ { \"componentId\": \"Modbus1\", \"componentType\": \"Modbus\" }, { \"componentId\": \"Egress\", \"componentType\": \"OmfEgress\" } ], \"Buffering\": { \"bufferLocation\": \"C:/ProgramData/OSIsoft/Adapters/Modbus/Modbus/Buffers\", \"maxBufferSizeMB\": -1, \"enableBuffering\": true } } View the configuration of the Logging facet within the OmfEgress component edgecmd Configuration OmfEgress Logging { \"logLevel\": \"Information\", \"logFileSizeLimitBytes\": 34636833, \"logFileCountLimit\": 31 } View the configuration of a specific entry in the HealthEndpoints facet within the System component edgecmd Configuration System HealthEndpoints id=Endpoint_1 { \"id\": \"Endpoint_1\", \"endpoint\": \"https://localhost:5821\", \"userName\": \"user_54\", \"password\": \"***************\", \"clientId\": null, \"clientSecret\": null, \"tokenEndpoint\": null, \"validateEndpointCertificate\": true }"
  }
}